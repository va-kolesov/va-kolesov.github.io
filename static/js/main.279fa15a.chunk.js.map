{"version":3,"sources":["components/NoteButton.jsx","components/NoteButtons.jsx","utils/getNoteByFrequency.js","components/Scale.jsx","components/Tuner.jsx","components/TunerButton.jsx","components/EditButton.jsx","components/NoteChooser.jsx","App.jsx","index.js"],"names":["NoteButton","props","className","this","style","onClick","note","React","Component","NoteButtons","notesState","map","item","i","key","clickable","onNoteClick","noteName","getNoteString","noteNum","Math","floor","Scale","range","push","getNotesRangeByNote","hint","angle","viewBox","d","transform","Tuner","state","notes","difference","prepateNotesState","currentNoteIndex","findIndex","scaleStyle","editable","noteNumber","TunerButton","opened","items","setState","onItemClick","title","selectedItem","EditButton","version","id","xmlns","x","y","NoteChooser","noteList","j","length","menuItems","tunings","AUDIO_SETTINGS","noiseSuppression","echoCancellation","error","alert","frequency","log","pow","getFrequencyByNote","LN2","App","selectedTuning","customTuning","initialize","buflen","analyser","frequencyBinCount","buf","Float32Array","getFloatTimeDomainData","inp","maxValue","abs","getMaxValue","_resetTimeout","clearTimeout","sampleRate","minN","minS","n","s","round","getFrequency","_sampleRate","getNoteByFrequency","diff","isNoteInBounds","setTimeout","update","bind","dictionary","callback","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","e","stream","audioContext","AudioContext","mediaStreamSource","createMediaStreamSource","createAnalyser","fftSize","connect","window","webkitAudioContext","audio","gotStream","debug","undefined","editingNote","newTuning","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.279fa15a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class NoteButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={\"ButtonBase Button Button-\" + this.props.style} \r\n                 onClick={() => {\r\n                     if (this.props.onClick) {\r\n                         this.props.onClick();\r\n                     }\r\n                 }}>\r\n                {this.props.note}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport NoteButton from  './NoteButton.jsx';\r\n\r\nexport default class NoteButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='NoteButtons'>\r\n                {\r\n                    this.props.notesState.map(\r\n                        (item , i) => (\r\n                            <NoteButton \r\n                                key={i} \r\n                                note={item.note} \r\n                                style={item.style || 'default'} \r\n                                onClick={\r\n                                    () => {\r\n                                        if (this.props.clickable) {\r\n                                            this.props.onNoteClick(i);\r\n                                        }\r\n                                    }\r\n                                }/>\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","const noteName = ['C','C#','D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\r\n\r\nfunction getNoteByFrequency(frequency) {\r\n    return Math.round(12 * Math.log(frequency / 440) / Math.LN2) + 57;\r\n} \r\n\r\nfunction getNoteString(noteNum) {\r\n    return noteName[noteNum % 12] + Math.floor(noteNum / 12);\r\n}\r\n\r\nfunction getFrequencyByNote(noteNum) {\r\n    return 440 * Math.pow(2, (noteNum - 57) / 12);\r\n}\r\n\r\nfunction getNotesRangeByNote(noteNum) {\r\n    const RANGE_LEN = 3;\r\n    let range = [];\r\n    for (let i = -RANGE_LEN; i <= RANGE_LEN; i++) {\r\n        range.push(getNoteString(noteNum + i));\r\n    }\r\n    return range;\r\n}\r\n\r\nexport {\r\n    getNoteByFrequency,\r\n    getNoteString,\r\n    getFrequencyByNote,\r\n    getNotesRangeByNote\r\n}\r\n","import React from 'react';\r\nimport { getNotesRangeByNote, getNoteString } from '../utils/getNoteByFrequency';\r\n\r\nexport default class Scale extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        let range = getNotesRangeByNote(this.props.note);\r\n        let note = getNoteString(this.props.note);\r\n        if (this.props.note > 71 || this.props.note < 24) {\r\n            note = null;\r\n        }\r\n        let hint = '';\r\n        if (this.props.style) {\r\n            if (this.props.angle > 2) {\r\n                hint = 'tune down';\r\n            } else if (this.props.angle < -2) {\r\n                hint = 'tune up';\r\n            } else {\r\n                hint = 'tuned';\r\n            }\r\n        }\r\n        return (\r\n            <div className={'Scale Button-' + (this.props.style || 'default')}>\r\n                <div className='Scale_tick'>\r\n                    <svg viewBox='-10 0 20 30'>\r\n                        <path d='M-7,0 Q-2,0 0,25 Q2,0 7,0' />\r\n                    </svg>\r\n                </div>\r\n                <div className='Scale_content' style={ { transform: `rotate(${this.props.angle || 0}deg)`} }>\r\n                    {\r\n                        note ? (<>\r\n                            <div className='Scale_elem Scale_elem-small r-3'>{range[0]? range[0] : ''}</div>\r\n                            <div className='Scale_elem Scale_elem-small r-2'>{range[1]? range[1] : ''}</div>\r\n                            <div className='Scale_elem Scale_elem-small r-1'>{range[2]? range[2] : ''}</div>\r\n                            <div className='Scale_elem Scale_elem-big r0'>{range[3]? range[3] : ''}</div>\r\n                            <div className='Scale_elem Scale_elem-small r1'>{range[4]? range[4] : ''}</div>\r\n                            <div className='Scale_elem Scale_elem-small r2'>{range[5]? range[5] : ''}</div>\r\n                            <div className='Scale_elem Scale_elem-small r3'>{range[6]? range[6] : ''}</div>\r\n                        </>) : \r\n                        (<></>)\r\n                    }\r\n                </div>\r\n                <div className='Scale_hint'>\r\n                    <div className='Scale_hint_note'>\r\n                        {note && note}\r\n                    </div>\r\n                    <div className='Scale_hint_text'>\r\n                        {hint}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport NoteButtons from './NoteButtons.jsx';\r\nimport Scale from './Scale.jsx';\r\n\r\nexport default class Tuner extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    prepateNotesState({notes, note, difference}) {\r\n        let state = notes.map((item) => {\r\n            let style = item === note ? (difference < 0.2 ? 'right' : 'wrong') : '';\r\n            return {\r\n                note: item,\r\n                style\r\n            }\r\n        });\r\n        return state;\r\n    }\r\n    render() {\r\n        let notesState = this.prepateNotesState(this.props);\r\n        let currentNoteIndex = notesState.findIndex((item) => item.style);\r\n        let scaleStyle = '';\r\n        if (currentNoteIndex !== -1) {\r\n            scaleStyle = notesState[currentNoteIndex].style;\r\n        }\r\n\r\n        return (\r\n            <div className='Tuner'>\r\n                <NoteButtons \r\n                    clickable={this.props.editable}\r\n                    notesState={notesState}\r\n                    onNoteClick={this.props.onNoteClick}/>\r\n                <Scale note={this.props.noteNumber} angle={this.props.difference * 20} style={scaleStyle}></Scale>\r\n                <div className='placehodler'></div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class TunerButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { opened: false };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='MenuContainer'>\r\n                {this.state.opened ? (\r\n                    <div className=\"Menu Button-default\">\r\n                        {\r\n                            this.props.items.map(\r\n                                (item , i) => (\r\n                                    <div className={'MenuItem'+ (i?' border':'')}\r\n                                        onClick={() => {\r\n                                            this.setState({ opened: false });\r\n                                            this.props.onItemClick(item);\r\n                                        }}\r\n                                        key={i}>\r\n                                        {item.title}\r\n                                    </div>\r\n                                )\r\n                            )                        \r\n                        }   \r\n                    </div>\r\n                ) : (\r\n                    <div className=\"ButtonBase MenuButton Button-default\"\r\n                        onClick={() => {\r\n                            this.setState({ opened: true });\r\n                        }}>\r\n                        {this.props.selectedItem}\r\n                    </div>        \r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class EditButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='ButtonBase EditButton Button-default'\r\n                 onClick={()=>{this.props.onClick()}}>\r\n                <svg className='Icon'\r\n                    version=\"1.1\" \r\n                     id=\"Capa_1\" \r\n                     xmlns=\"http://www.w3.org/2000/svg\"  \r\n                     x=\"0px\" y=\"0px\" \r\n                     viewBox=\"0 0 528.899 528.899\" \r\n\t            >\r\n                    <g>\r\n                        <path d=\"M328.883,89.125l107.59,107.589l-272.34,272.34L56.604,361.465L328.883,89.125z M518.113,63.177l-47.981-47.981\r\n                                c-18.543-18.543-48.653-18.543-67.259,0l-45.961,45.961l107.59,107.59l53.611-53.611\r\n                                C532.495,100.753,532.495,77.559,518.113,63.177z M0.3,512.69c-1.958,8.812,5.998,16.708,14.811,14.565l119.891-29.069\r\n                                L27.473,390.597L0.3,512.69z\"\r\n                        />\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nconst noteName = [\"C\",\"C#\",\"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\n\r\n\r\nexport default class NoteChooser extends React.Component {\r\n    noteList = [];\r\n    constructor(props) {\r\n        super(props);\r\n        for (var i = 2; i <= 5; i++) {\r\n            for (var j=0; j < noteName.length; j++){\r\n                this.noteList.push(noteName[j]+i);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='Button-default NoteChooser'>\r\n                {\r\n                   this.noteList.map(\r\n                       (item, i) => (\r\n                            <div className={'MenuItem'+ (i?' border':'')}\r\n                                key={i}\r\n                                onClick={()=>{ \r\n                                    this.props.onItemClick(item) \r\n                                }}>\r\n                                {item}\r\n                            </div>\r\n                       )\r\n                   )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Tuner from './components/Tuner.jsx';\r\nimport './styles.scss';\r\nimport './variables.scss';\r\nimport { getNoteByFrequency,\r\n    getNoteString,\r\n    getFrequencyByNote } from './utils/getNoteByFrequency.js';\r\n\r\nimport TunerButton from './components/TunerButton.jsx';\r\nimport EditButton from './components/EditButton.jsx';\r\nimport NoteChooser from './components/NoteChooser.jsx';\r\n\r\nconst menuItems = [\r\n    {title: 'Standart'},\r\n    {title: 'Drop C'},\r\n    {title: 'Drop D'},\r\n    {title: 'Open C'},\r\n    {title: 'DADGAD'},\r\n    {title: 'Double Drop D'},\r\n    {title: 'Open G'},\r\n    {title: 'Custom'}\r\n]\r\nconst tunings = {\r\n    'Standart': ['E4', 'B3', 'G3', 'D3', 'A2', 'E2'],\r\n    'Drop C' : ['D4', 'A3', 'F3', 'C3', 'G2', 'C2'],\r\n    'Drop D' : ['E4', 'B3', 'G3', 'D3', 'A2', 'D2'],\r\n    'Open C' : ['E4', 'C4', 'G3', 'C3', 'G2', 'C2'],\r\n    'DADGAD' : ['D4', 'A3', 'G3', 'D3', 'A2', 'D2'],\r\n    'Double Drop D' : ['D4', 'B3', 'G3', 'D3', 'A2', 'D2'],\r\n    'Open G' : ['D4', 'B3', 'G3', 'D3', 'G2', 'D2'],\r\n    'Custom' : ['E4', 'B3', 'G3', 'D3', 'A2', 'E2']\r\n}\r\nconst AUDIO_SETTINGS = {\r\n    noiseSuppression: true,\r\n    echoCancellation: false\r\n}\r\nconst THRESHOLD = .09;\r\nconst FFT_SIZE = 4096;\r\n\r\nfunction error() {\r\n    alert('Stream generation failed.');\r\n}\r\n\r\nfunction getFrequency(buf, buflen, sampleRate) {\r\n    let minN = 1;\r\n    let minS = 1000;\r\n    for (let n = 2; n < buflen / 2; n++) {\r\n        let s = 0;\r\n        for (let x = 0; x < buflen / 2; x++) {\r\n            s += Math.abs(buf[x] - buf[x + n]);\r\n        }\r\n        if (s < minS) {\r\n            minN = n;\r\n            minS = s;\r\n        }\r\n    }\r\n    return Math.round(sampleRate / minN);\r\n}\r\n\r\nfunction difference(frequency, noteNum) {\r\n    return 12 * Math.log(frequency / getFrequencyByNote(noteNum)) / Math.LN2;\r\n}\r\n\r\nfunction getMaxValue(inp) {\r\n    let maxValue = 0;\r\n    for (let i = 0; i < inp.length; i++) {\r\n        maxValue = maxValue < Math.abs(inp[i]) ? Math.abs(inp[i]) : maxValue;\r\n    }\r\n    return maxValue;\r\n}\r\n\r\nfunction isNoteInBounds(note) {\r\n    return note < 71 && note > 24;\r\n}\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            note: null, \r\n            noteNum: null, \r\n            frequency: null, \r\n            difference: null,\r\n            selectedTuning: 'Standart',\r\n            customTuning: ['E4', 'B3', 'G3', 'D3', 'A2', 'E2']\r\n        };\r\n        this.initialize();\r\n    }\r\n    \r\n    update() {\r\n        let buflen = this.analyser.frequencyBinCount;\r\n        let buf = new Float32Array(buflen);\r\n        this.analyser.getFloatTimeDomainData(buf);\r\n        let maxValue =  getMaxValue(buf);\r\n        if (maxValue > THRESHOLD) {\r\n            if (this._resetTimeout) {\r\n                clearTimeout(this._resetTimeout);\r\n                this._resetTimeout = null;\r\n            }\r\n            let frequency = getFrequency(buf, buflen, this._sampleRate);\r\n            if (!frequency) {\r\n                if (!this._resetTimeout) {\r\n                    this._resetTimeout = setTimeout(() => {\r\n                        this.setState({\r\n                            note: null, \r\n                            noteNum: null, \r\n                            frequency: null, \r\n                            difference: null\r\n                        });\r\n                    }, 1500);\r\n                }\r\n            } else {\r\n                let noteNum = getNoteByFrequency(frequency);\r\n                let note = getNoteString(noteNum);\r\n                let diff = difference(frequency, noteNum);\r\n                if(isNoteInBounds(noteNum)) {\r\n                    this.setState({\r\n                        note: note, \r\n                        noteNum: noteNum, \r\n                        frequency: frequency, \r\n                        difference: diff\r\n                    });\r\n                } else {\r\n                    if (!this._resetTimeout) {\r\n                        this._resetTimeout = setTimeout(() => {\r\n                            this.setState({\r\n                                note: null, \r\n                                noteNum: null, \r\n                                frequency: null, \r\n                                difference: null\r\n                            });\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (!this._resetTimeout) {\r\n                this._resetTimeout = setTimeout(() => {\r\n                    this.setState({\r\n                        note: null, \r\n                        noteNum: null, \r\n                        frequency: null, \r\n                        difference: null\r\n                    });\r\n                }, 1500);\r\n            }\r\n        }\r\n        setTimeout(this.update.bind(this), 50);\r\n    }\r\n\r\n    getUserMedia(dictionary, callback) {\r\n        try {\r\n            navigator.getUserMedia = \r\n                navigator.getUserMedia ||\r\n                navigator.webkitGetUserMedia ||\r\n                navigator.mozGetUserMedia;\r\n            navigator.getUserMedia(dictionary, callback, error);\r\n        } catch (e) {\r\n            alert('Не удалось получить доступ к микрофону');\r\n        }\r\n    }\r\n\r\n    gotStream(stream) {\r\n        let audioContext = new AudioContext();\r\n        this._sampleRate = audioContext.sampleRate;\r\n        let mediaStreamSource = audioContext.createMediaStreamSource(stream);\r\n    \r\n        this.analyser = audioContext.createAnalyser();\r\n        this.analyser.fftSize = FFT_SIZE;\r\n        mediaStreamSource.connect( this.analyser );\r\n        this.update();\r\n    }\r\n\r\n    initialize() {\r\n        window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        this.getUserMedia({ audio: AUDIO_SETTINGS }, this.gotStream.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Container'>\r\n                <div className='Header'>\r\n                    {\r\n                        this.props.debug ? (\r\n                        <div>\r\n                            <div>\r\n                                {this.state.note}\r\n                            </div> \r\n                            <div>\r\n                                {this.state.noteNum}\r\n                            </div> \r\n                            <div>\r\n                                {this.state.frequency}\r\n                            </div> \r\n                        </div>) : (\r\n                    <div className='Logo'>\r\n                        Guitar Tuner\r\n                    </div>\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className='TopContent'>\r\n                    <EditButton\r\n                        onClick={() => {\r\n                            this.setState({ selectedTuning: 'Custom'})\r\n                        }}>\r\n                    </EditButton>\r\n                    <TunerButton\r\n                        items={menuItems}\r\n                        selectedItem={this.state.selectedTuning}\r\n                        onItemClick={(item) => {\r\n                            this.setState({ selectedTuning: item.title });\r\n                        }}>\r\n                    </TunerButton>\r\n                    <div className='placehodler'></div>\r\n                    {\r\n                        this.state.editingNote !== undefined ? \r\n                            <NoteChooser\r\n                                onItemClick={(item) => {\r\n                                    var newTuning = [...this.state.customTuning];\r\n                                    newTuning[this.state.editingNote] = item;\r\n\r\n                                    this.setState({ editingNote: undefined,\r\n                                                    customTuning: newTuning});\r\n                                }}\r\n                            >\r\n\r\n                            </NoteChooser> : <></>\r\n                    }\r\n                </div>\r\n                <Tuner \r\n                    notes={this.state.selectedTuning === 'Custom'?\r\n                        this.state.customTuning : \r\n                        tunings[this.state.selectedTuning]\r\n                    }\r\n                    note={this.state.note} \r\n                    noteNumber={this.state.noteNum} \r\n                    frequency={this.state.frequency} \r\n                    editable={this.state.selectedTuning === 'Custom'}\r\n                    onNoteClick={(item)=>{\r\n                        this.setState({ editingNote : item})\r\n                    }}\r\n                    difference={this.state.difference}>\r\n                </Tuner>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}